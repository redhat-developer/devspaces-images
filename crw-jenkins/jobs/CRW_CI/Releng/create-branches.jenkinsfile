#!/usr/bin/env groovy

// PARAMETERS for this pipeline:
// def MIDSTM_BRANCH = "crw-2-rhel-8" // redhat-developer/codeready-workspaces branch to use as source of the new branches
// def FUTURE_BRANCH = "crw-2.y-rhel-8" // branch to create

def List GH_REPOS = [
    'codeready-workspaces',
    'codeready-workspaces-chectl',
    'codeready-workspaces-deprecated',
    'codeready-workspaces-images',
    'codeready-workspaces-theia']

def buildNode = "x86_64-rhel8||s390x-rhel8||ppc64le-rhel8"
timeout(120) {
    node("${buildNode}"){
        stage("Create branches") {
            wrap([$class: 'TimestamperBuildWrapper']) {
                sh('curl -sSLO https://raw.githubusercontent.com/redhat-developer/codeready-workspaces/'+ MIDSTM_BRANCH + '/product/util.groovy')
                def util = load "${WORKSPACE}/util.groovy"
                cleanWs()
                sh('curl -sSLO https://raw.githubusercontent.com/redhat-developer/codeready-workspaces/'+ MIDSTM_BRANCH + '/product/tagRelease.sh && chmod +x tagRelease.sh')
                sh('curl -sSLO https://raw.githubusercontent.com/redhat-developer/codeready-workspaces/'+ MIDSTM_BRANCH + '/product/containerExtract.sh && chmod +x containerExtract.sh')
                withCredentials([string(credentialsId:'crw_devstudio-release-token', variable: 'GITHUB_TOKEN')])
                {
                    for (int i=0; i < GH_REPOS.size(); i++) {
                        println "##  Clone github.com/redhat-developer/${GH_REPOS[i]}.git"
                        util.cloneRepo("https://github.com/redhat-developer/${GH_REPOS[i]}.git", "/tmp/tmp-checkouts/projects_${GH_REPOS[i]}", MIDSTM_BRANCH, false)
                    }
                    currentBuild.description="Create ${FUTURE_BRANCH} branch from ${MIDSTM_BRANCH} ..."
                    sh ('''
                    ./tagRelease.sh --branchfrom ''' + MIDSTM_BRANCH + ''' -gh ''' + FUTURE_BRANCH + ''' -ghtoken ''' + GITHUB_TOKEN
                    )
                    currentBuild.description="Created ${FUTURE_BRANCH} branches"
                } //with
            } // wrap
        } // stage
    } // node
} // timeout
